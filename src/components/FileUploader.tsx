import React from 'react';
import { useFormContext } from "react-hook-form";
import {proposalUploadSchema} from "../schemas/ProposalUploadSchema";

const FileUploader = () => {
    const { setValue } = useFormContext();

    function parseDepositString(deposit: string): { amount: number; denom: string }  {
        const match = deposit.match(/^(\d+)([a-zA-Z]+)$/);
        if (!match) return { amount: 0, denom: "" };
        return {
            amount: parseInt(match[1]),
            denom: match[2],
        };
    }


    const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {
        const file = e.target.files?.[0];
        if (!file) return;

        try {
            const text = await file.text();
            const parsed = JSON.parse(text);
            const validated = proposalUploadSchema.parse(parsed)
            // reset(parsed);
            const msg = validated.messages[0];
            const parsedDeposit = parseDepositString(validated.deposit);
            setValue("deposit.amount", parsedDeposit.amount);
            setValue("deposit.denom", parsedDeposit.denom);
            setValue("recipient", msg.recipient);
            setValue("sender", msg.authority);
            setValue("upperLimitAmount.denom", msg.amount[0].denom);
            setValue("upperLimitAmount.amount", msg.amount[0].amount);
            setValue("metadata", validated.metadata);
            setValue("title", validated.title);
            setValue("summary", validated.summary);
            setValue("expedited", validated.expedited);
        } catch (error) {
            alert("Parsing error");
        }
    };


    return (
        <div style={{display: "flex", flexDirection: "column", gap: "6px", width: '100%'}}>
            <label>
                You can import json file generated by gaia CLI or similar
            </label>
            <input
                type="file"
                accept=".json"
                onChange={handleFileChange}
            />
        </div>
    );
};

export default FileUploader;